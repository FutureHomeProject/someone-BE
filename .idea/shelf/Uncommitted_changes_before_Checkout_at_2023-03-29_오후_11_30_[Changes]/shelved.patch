Index: src/test/java/com/example/someonebe/util/S3UploaderTest.java
===================================================================
diff --git a/src/test/java/com/example/someonebe/util/S3UploaderTest.java b/src/test/java/com/example/someonebe/util/S3UploaderTest.java
deleted file mode 100644
--- a/src/test/java/com/example/someonebe/util/S3UploaderTest.java	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
+++ /dev/null	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
@@ -1,68 +0,0 @@
-package com.example.someonebe.util;
-
-import java.io.IOException;
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.DisplayName;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class S3UploaderTest {
-
-    @Autowired
-    private S3Uploader s3Uploader;
-    
-    @Test
-    @DisplayName("기본적인 Uploader 실행 테스트")
-    public void loadTest(){
-        /* given */
-        
-        /* when */
-    
-        /* then */
-        System.out.println(s3Uploader.amazonS3Client);
-    }
-
-    @Test
-    public void upload(){
-
-        /* given */
-        String filePath = "C:\\test\\2372ad79e18d7b.png";
-
-        /* when */
-        String uploadName= s3Uploader.uploadFileToS3(filePath);
-        /* then */
-
-        System.out.println(uploadName);
-    }
-
-    @Test @DisplayName("S3로부터 해당 file 이름의 객체 Url를 얻어 옴")
-    public void getImage() throws IOException {
-
-        /* given */
-        String fileName = "2372ad79e18d7b.png";
-
-        /* when */
-
-        String url = s3Uploader.getFileUrl(fileName);
-
-        /* then */
-
-        Assertions.assertNotNull(url);
-        System.out.println(url);
-    }
-    
-    @Test @DisplayName("S3에 저장된 file을 filename으로 삭제 함")
-    public void deleteS3File(){
-        /* given */
-        String fileName = "2372ad79e18d7b.png";
-
-        /* when */
-
-        s3Uploader.removeS3File(fileName);
-
-        /* then */
-    }
-
-}
\ No newline at end of file
Index: src/main/java/com/example/someonebe/controller/FileUploadController.java
===================================================================
diff --git a/src/main/java/com/example/someonebe/controller/FileUploadController.java b/src/main/java/com/example/someonebe/controller/FileUploadController.java
deleted file mode 100644
--- a/src/main/java/com/example/someonebe/controller/FileUploadController.java	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
+++ /dev/null	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
@@ -1,27 +0,0 @@
-//package com.example.someonebe.controller;
-//
-//import com.example.someonebe.dto.request.ReqFileDto;
-//import com.example.someonebe.service.FileService;
-//import lombok.RequiredArgsConstructor;
-//import lombok.extern.log4j.Log4j2;
-//import org.springframework.http.MediaType;
-//import org.springframework.http.ResponseEntity;
-//import org.springframework.web.bind.annotation.PostMapping;
-//import org.springframework.web.bind.annotation.RestController;
-//
-//@RestController
-//@Log4j2
-//@RequiredArgsConstructor
-//public class FileUploadController {
-//
-//    private final FileService fileService;
-//
-//    @PostMapping(value = "/test/upload", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
-//    public ResponseEntity<Object> upload(ReqFileDto reqFileDto) {
-//
-//        fileService.uploadFiles(reqFileDto);
-//
-//        return ResponseEntity.ok("등록 완료");
-//    }
-//
-//}
Index: src/main/java/com/example/someonebe/service/FileService.java
===================================================================
diff --git a/src/main/java/com/example/someonebe/service/FileService.java b/src/main/java/com/example/someonebe/service/FileService.java
deleted file mode 100644
--- a/src/main/java/com/example/someonebe/service/FileService.java	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
+++ /dev/null	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
@@ -1,65 +0,0 @@
-//package com.example.someonebe.service;
-//
-//import com.example.someonebe.dto.request.ReqFileDto;
-//import com.example.someonebe.util.S3Uploader;
-//import java.io.IOException;
-//import java.nio.file.Path;
-//import java.nio.file.Paths;
-//import java.util.ArrayList;
-//import java.util.List;
-//import java.util.Objects;
-//import java.util.UUID;
-//import lombok.RequiredArgsConstructor;
-//import lombok.extern.slf4j.Slf4j;
-//import org.springframework.beans.factory.annotation.Value;
-//import org.springframework.stereotype.Service;
-//import org.springframework.web.multipart.MultipartFile;
-//
-//@Service @RequiredArgsConstructor
-//@Slf4j
-//public class FileService {
-//
-//    private final S3Uploader s3Uploader;
-//
-//    @Value("${com.example.upload.path}")
-//    private String uploadPath;
-//
-//    public void uploadFiles(ReqFileDto dto){
-//
-//        MultipartFile[] files = dto.getFiles();
-//
-//        List<Path> savePaths = new ArrayList<>();
-//
-//        for(MultipartFile file : files){
-//
-//            Objects.requireNonNull(file);
-//
-//            //요청 받은 업로드 파일 중 image 타입만 허용
-//            if (file.getContentType().startsWith("image")){
-//
-//                String originalName = file.getOriginalFilename();
-//                String uuid = UUID.randomUUID().toString();
-//
-//                Path savePath = Paths.get(uploadPath, uuid + "_" + originalName);
-//
-//                try {
-//                    file.transferTo(savePath);
-//                } catch (IOException e) {
-//                    log.info("S3 file upload Fail");
-//                }
-//
-//                savePaths.add(savePath);
-//            }
-//        }
-//
-//
-//        for(Path p : savePaths){
-//
-//            s3Uploader.uploadFileToS3(uploadPath + p.getFileName().toString());
-//        }
-//
-//        //중복된 파일 이름을 허용하기 위한 uuid와 기존 파일 이름의 결합
-//
-//    }
-//
-//}
Index: src/main/java/com/example/someonebe/util/S3Uploader.java
===================================================================
diff --git a/src/main/java/com/example/someonebe/util/S3Uploader.java b/src/main/java/com/example/someonebe/util/S3Uploader.java
deleted file mode 100644
--- a/src/main/java/com/example/someonebe/util/S3Uploader.java	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
+++ /dev/null	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
@@ -1,65 +0,0 @@
-//package com.example.someonebe.util;
-//
-//import com.amazonaws.services.s3.AmazonS3Client;
-//import com.amazonaws.services.s3.model.CannedAccessControlList;
-//import com.amazonaws.services.s3.model.PutObjectRequest;
-//import java.io.File;
-//import lombok.RequiredArgsConstructor;
-//import lombok.extern.log4j.Log4j2;
-//import org.springframework.beans.factory.annotation.Value;
-//import org.springframework.stereotype.Component;
-//
-//@RequiredArgsConstructor
-//@Component
-//@Log4j2
-//public class S3Uploader {
-//
-//    public final AmazonS3Client amazonS3Client;
-//
-//    @Value("${cloud.aws.s3.bucket}")
-//    public String bucket;
-//
-//    public String uploadFileToS3(String filePath) {
-//
-//        File targetFile = new File(filePath);
-//
-//        String uploadImageUrl = putS3(targetFile.getName(), targetFile);
-//
-//        removeOriginalFile(targetFile);
-//
-//        return uploadImageUrl;
-//
-//    }
-//
-//    public String getFileUrl(String fileName) {
-//
-//        return amazonS3Client.getUrl(bucket, fileName).toString();
-//    }
-//
-//    public void removeS3File(String fileName) {
-//
-//        amazonS3Client.deleteObject(bucket, fileName);
-//    }
-//
-//    private void removeOriginalFile(File targetFile) {
-//
-//        if (targetFile.exists() && targetFile.delete()) {
-//            log.info("File delete success");
-//
-//            return;
-//        }
-//
-//        log.info("fail to remove");
-//
-//    }
-//
-//    private String putS3(String filename, File uploadFile) throws RuntimeException {
-//
-//        amazonS3Client.putObject(new PutObjectRequest(bucket, filename, uploadFile).withCannedAcl(
-//            CannedAccessControlList.PublicRead));
-//
-//        return amazonS3Client.getUrl(bucket, filename).toString();
-//    }
-//
-//
-//}
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ing.level.org.apache.coyote.http11=debug\r\n#spring.profiles.include=mysql\r\n#spring.thymeleaf.cache=false\r\n#spring.jpa.properties.hibernate.show_sql=true\r\n#spring.jpa.properties.hibernate.format_sql=true\r\n#spring.jpa.hibernate.ddl-auto=update\r\n#jwt.secret.key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=\r\n\r\n#mysql\r\nspring.datasource.url=jdbc:mysql://studybook-db.ckkyb2lydteh.ap-northeast-2.rds.amazonaws.com:3306/studybook\r\nspring.datasource.username=admin\r\nspring.datasource.password=apdlvmf1!\r\nspring.jpa.hibernate.ddl-auto=update\r\njwt.secret.key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=\r\n\r\n## h2\r\n#spring.h2.console.enabled=true\r\n#spring.datasource.url=jdbc:h2:mem:db;MODE=MYSQL;\r\n#spring.datasource.username=sa\r\n#spring.datasource.password=\r\n#spring.jpa.hibernate.ddl-auto=update\r\n#\r\n#\r\n#spring.jpa.generate-ddl=true\r\n#jwt.secret.key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=\r\n\r\n#logging\r\n\r\n#s3\r\ncloud.aws.credentials.access-key=AKIAZQJZYDTFOWPLVRFS\r\ncloud.aws.credentials.secret-key=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\r\n\r\ncloud.aws.s3.bucket = someone-be-bucket\r\n\r\ncloud.aws.region.static=ap-northeast-2\r\ncloud.aws.stack.auto=false\r\n\r\ncom.example.upload.path=C:\\\\upload\\\\\r\n\r\nspring.servlet.multipart.enabled=true\r\nspring.servlet.multipart.location=C:\\\\upload\r\nspring.servlet.multipart.max-request-size=30MB\r\nspring.servlet.multipart.max-file-size=10MB
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 0f8be5ab66076c050a20f6530b639e953c3bca0d)
+++ b/src/main/resources/application.properties	(date 1680102091515)
@@ -7,9 +7,10 @@
 #jwt.secret.key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=
 
 #mysql
-spring.datasource.url=jdbc:mysql://studybook-db.ckkyb2lydteh.ap-northeast-2.rds.amazonaws.com:3306/studybook
+
+spring.datasource.url=jdbc:mysql://been-someone-db.ckvsfnzhoyct.ap-northeast-2.rds.amazonaws.com:3306/been_someone_name
 spring.datasource.username=admin
-spring.datasource.password=apdlvmf1!
+spring.datasource.password=nono9194
 spring.jpa.hibernate.ddl-auto=update
 jwt.secret.key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=
 
@@ -26,18 +27,21 @@
 
 #logging
 
-#s3
+#s3 Bucket
 cloud.aws.credentials.access-key=AKIAZQJZYDTFOWPLVRFS
 cloud.aws.credentials.secret-key=HhYN71gnS3Ij7DNHpBqJ0S70dbSjbebiWJ3Q44CX
-
-cloud.aws.s3.bucket = someone-be-bucket
-
-cloud.aws.region.static=ap-northeast-2
 cloud.aws.stack.auto=false
 
-com.example.upload.path=C:\\upload\\
+#AWS S3 Service bucket
+cloud.aws.s3.bucket=been-image-s3
+cloud.aws.region.static=ap-northeast-2
+
+#AWS S3 Bucket URL
+cloud.aws.s3.bucket.url=https://s3.console.aws.amazon.com/s3/buckets/been-image-s3?region=ap-northeast-2&tab=objects
 
-spring.servlet.multipart.enabled=true
-spring.servlet.multipart.location=C:\\upload
-spring.servlet.multipart.max-request-size=30MB
-spring.servlet.multipart.max-file-size=10MB
\ No newline at end of file
+#multipart size
+spring.servlet.multipart.max-request-size=1024MB
+spring.servlet.multipart.max-file-size=1024MB
+
+#?????? ??? ???
+spring.servlet.multipart.enabled=true
\ No newline at end of file
