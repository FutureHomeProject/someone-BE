Index: src/main/java/com/example/someonebe/service/BoardCommentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.someonebe.service;\r\n\r\nimport com.example.someonebe.dto.request.BoardCommentRequestDto;\r\nimport com.example.someonebe.dto.response.BoardCommentResponseDto;\r\nimport com.example.someonebe.dto.response.MessageResponseDto;\r\nimport com.example.someonebe.dto.response.StatusEnum;\r\nimport com.example.someonebe.entity.*;\r\nimport com.example.someonebe.exception.ApiException;\r\nimport com.example.someonebe.exception.ExceptionEnum;\r\nimport com.example.someonebe.repository.BoardCommentRepository;\r\nimport com.example.someonebe.repository.BoardRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport javax.transaction.Transactional;\r\n\r\n@Service\r\n@RequiredArgsConstructor\r\npublic class BoardCommentService {\r\n\r\n    private final BoardCommentRepository boardCommentRepository;\r\n    private final BoardRepository boardRepository;\r\n\r\n    // 댓글 작성\r\n    @Transactional\r\n    public MessageResponseDto addComment(User user, Long houseid, BoardCommentRequestDto boardCommentRequestDto) {\r\n        // 댓글 작성할 게시글 존재 확인\r\n        Board board = findBoardPost(houseid);\r\n        // 게시글에 댓글 저장\r\n        BoardComment boardComment = boardCommentRepository.saveAndFlush(new BoardComment(boardCommentRequestDto, user, board));\r\n        // 댓글 response 형식 변환\r\n        BoardCommentResponseDto boardCommentResponseDto = new BoardCommentResponseDto(boardComment);\r\n        return new MessageResponseDto(StatusEnum.OK, boardCommentResponseDto);\r\n    }\r\n\r\n    // 댓글 수정\r\n    @Transactional\r\n    public MessageResponseDto updateComment(User user, Long houseid, Long commentid, BoardCommentRequestDto boardCommentRequestDto) {\r\n        // 댓글 수정할 게시글 존재 확인\r\n        Board board = findBoardPost(houseid);\r\n        // 수정할 댓글 찾기\r\n        BoardComment boardComment = findComment(commentid);\r\n        // 내가 작성한 댓글인지 확인\r\n        matchUser(commentid, user);\r\n\r\n        boardComment.updateComment(boardCommentRequestDto);\r\n        return new MessageResponseDto(StatusEnum.OK, boardComment);\r\n    }\r\n\r\n    // 댓글 삭제\r\n    @Transactional\r\n    public MessageResponseDto deleteComment(User user, Long houseid, Long commentid) {\r\n        // 댓글 삭제할 게시글 존재 확인\r\n        Board board = findBoardPost(houseid);\r\n        // 삭제할 댓글 찾기\r\n        BoardComment boardComment = findComment(commentid);\r\n        // 내가 작성한 댓글인지 확인\r\n        matchUser(commentid, user);\r\n        // 댓글 삭제\r\n        boardCommentRepository.deleteById(commentid);\r\n        return new MessageResponseDto(StatusEnum.OK, null);\r\n    }\r\n    \r\n    // 게시글 찾기 함수\r\n    public Board findBoardPost(Long houseid) {\r\n        return boardRepository.findById(houseid).orElseThrow(() -> new ApiException(ExceptionEnum.NOT_FOUND_HOUSE_ID));\r\n    }\r\n\r\n    // 댓글 찾기 함수\r\n    public BoardComment findComment(Long commentid) {\r\n        return boardCommentRepository.findById(commentid).orElseThrow(() -> new ApiException(ExceptionEnum.NOT_FOUND_BOARD_COMMENT));\r\n    }\r\n\r\n    // 댓글 내가 쓴건지 확인\r\n    public void matchUser(Long commentid, User user) {\r\n        boardCommentRepository.findByIdAndUser(commentid, user).orElseThrow(() -> new ApiException(ExceptionEnum.NOT_MATCH_USER));\r\n    }\r\n\r\n    \r\n}\r\n
===================================================================
diff --git a/src/main/java/com/example/someonebe/service/BoardCommentService.java b/src/main/java/com/example/someonebe/service/BoardCommentService.java
--- a/src/main/java/com/example/someonebe/service/BoardCommentService.java	
+++ b/src/main/java/com/example/someonebe/service/BoardCommentService.java	
@@ -3,6 +3,7 @@
 import com.example.someonebe.dto.request.BoardCommentRequestDto;
 import com.example.someonebe.dto.response.BoardCommentResponseDto;
 import com.example.someonebe.dto.response.MessageResponseDto;
+import com.example.someonebe.dto.response.ReviewResponseDto;
 import com.example.someonebe.dto.response.StatusEnum;
 import com.example.someonebe.entity.*;
 import com.example.someonebe.exception.ApiException;
